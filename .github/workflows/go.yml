name: tests

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened]
    
env:
  FORESIGHT_UPLOADER_SIGNER_URL: https://upload.service.runforesight.us
  WORKFLOW_TELEMETRY_BASE_URL: https://api.service.runforesight.us
  
jobs:
  test:
    name: Test
    strategy:
      matrix:
        os: [ "ubuntu-latest", "macos-latest", "windows-latest" ]
        go-version: [ "1.18" ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Collect Workflow Telemetry
        if: always()
        uses: runforesight/foresight-workflow-kit-action@v1
        with:
          api_key: ${{ secrets.FORESIGHT_PROJECT_WALL_APIKEY }}
      -
        name: setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      -
        name: checkout
        uses: actions/checkout@v3
      -
        name: simple test
        run: go test -v -json ./... > ./test-report-simple.json
      -
        name: test with GC pressure
        run: go test -v -json ./... > ./test-report-gc.json
        env:
          GOGC: 1
      -
        name: test with race detector
        run: go test -v -json -race ./... > ./test-report-race.json
        
      - name: Analyze Test and/or Coverage Results
        if: always()
        uses: runforesight/foresight-test-kit-action@v1
        with:
          api_key: ${{ secrets.FORESIGHT_PROJECT_WALL_APIKEY }}
          test_framework: golang
          test_format: json
          test_path: |
            ./test-report-simple.json
            ./test-reports-gc.json
            ./test-reports-race.json
  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Collect Workflow Telemetry
        if: always()
        uses: runforesight/foresight-workflow-kit-action@v1
        with:
          api_key: ${{ secrets.FORESIGHT_PROJECT_WALL_APIKEY }}
      - name: setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: checkout
        uses: actions/checkout@v3
      - name: measure coverage
        run: go test -v -coverprofile=coverage.out ./...
      - name: Analyze Test and/or Coverage Results
        if: always()
        uses: runforesight/foresight-test-kit-action@v1
        with:
          api_key: ${{ secrets.FORESIGHT_PROJECT_WALL_APIKEY }}
          coverage_format: golang
          coverage_path: |
              coverage.out
